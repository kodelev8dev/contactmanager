// <auto-generated />
using System;
using ContactManager.Service.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContactManager.Service.Migrations
{
    [DbContext(typeof(ContactManagerContext))]
    partial class ContactManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContactManager.Service.Model.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id", "Name");

                    b.ToTable("Contacts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St",
                            Created = new DateTime(2024, 6, 18, 17, 4, 36, 643, DateTimeKind.Local).AddTicks(70),
                            Email = "iUqFP@example.com",
                            IsDeleted = false,
                            LastUpdated = new DateTime(2024, 6, 18, 17, 4, 36, 643, DateTimeKind.Local).AddTicks(100),
                            Name = "John Doe",
                            Notes = "Test contact",
                            Phone = "1234567890"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Oak St",
                            Created = new DateTime(2024, 6, 18, 17, 4, 36, 643, DateTimeKind.Local).AddTicks(100),
                            Email = "b2yJn@example.com",
                            IsDeleted = false,
                            LastUpdated = new DateTime(2024, 6, 18, 17, 4, 36, 643, DateTimeKind.Local).AddTicks(100),
                            Name = "Jane Doe",
                            Notes = "Test contact",
                            Phone = "0987654321"
                        },
                        new
                        {
                            Id = 3,
                            Address = "123 Main St",
                            Created = new DateTime(2024, 6, 18, 17, 4, 36, 643, DateTimeKind.Local).AddTicks(100),
                            Email = "iUqFP@example.com",
                            IsDeleted = false,
                            LastUpdated = new DateTime(2024, 6, 18, 17, 4, 36, 643, DateTimeKind.Local).AddTicks(100),
                            Name = "John Smith",
                            Notes = "Test contact",
                            Phone = "1234567890"
                        },
                        new
                        {
                            Id = 4,
                            Address = "456 Oak St",
                            Created = new DateTime(2024, 6, 18, 17, 4, 36, 643, DateTimeKind.Local).AddTicks(110),
                            Email = "b2yJn@example.com",
                            IsDeleted = true,
                            LastUpdated = new DateTime(2024, 6, 18, 17, 4, 36, 643, DateTimeKind.Local).AddTicks(110),
                            Name = "Jane Smith",
                            Notes = "Test contact",
                            Phone = "0987654321"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
